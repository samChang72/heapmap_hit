{"version":3,"file":"heapmap.js","mappings":"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","sources":["webpack://HeapMap/webpack/universalModuleDefinition","webpack://HeapMap/webpack/bootstrap","webpack://HeapMap/webpack/runtime/define property getters","webpack://HeapMap/webpack/runtime/hasOwnProperty shorthand","webpack://HeapMap/./src/domUtils.ts","webpack://HeapMap/./src/clickTracker.ts","webpack://HeapMap/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HeapMap\"] = factory();\n\telse\n\t\troot[\"HeapMap\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * DOM 工具函數集\n */\nexport const DOMUtils = {\n    /**\n     * 生成元素的唯一選擇器路徑\n     * @param element - 目標 HTML 元素\n     * @returns CSS 選擇器字串\n     */\n    getElementSelector(element) {\n        if (element.id) {\n            return `#${element.id}`;\n        }\n        const path = [];\n        let current = element;\n        while (current && current !== document.body) {\n            let selector = current.tagName.toLowerCase();\n            if (current.className) {\n                const classes = current.className.split(' ').filter(cls => cls).join('.');\n                selector += `.${classes}`;\n            }\n            // 如果有兄弟節點，添加 nth-child\n            const parent = current.parentElement;\n            if (parent) {\n                const siblings = Array.from(parent.children);\n                const sameTagSiblings = siblings.filter(sibling => sibling.tagName === current.tagName);\n                if (sameTagSiblings.length > 1) {\n                    const index = sameTagSiblings.indexOf(current) + 1;\n                    selector += `:nth-child(${index})`;\n                }\n            }\n            path.unshift(selector);\n            current = current.parentElement;\n        }\n        return path.join(' > ');\n    },\n    /**\n     * 獲取元素的詳細資訊\n     * @param element - 目標 HTML 元素\n     * @returns 元素詳細資訊\n     */\n    getElementInfo(element) {\n        var _a, _b;\n        const rect = element.getBoundingClientRect();\n        const computedStyle = window.getComputedStyle(element);\n        return {\n            tagName: element.tagName.toLowerCase(),\n            id: element.id || null,\n            className: element.className || null,\n            textContent: ((_a = element.textContent) === null || _a === void 0 ? void 0 : _a.trim().substring(0, 100)) || null,\n            innerHTML: ((_b = element.innerHTML) === null || _b === void 0 ? void 0 : _b.substring(0, 200)) || null,\n            attributes: this.getElementAttributes(element),\n            selector: this.getElementSelector(element),\n            boundingRect: this.getBoundingRectInfo(rect),\n            styles: this.getElementStyles(computedStyle)\n        };\n    },\n    /**\n     * 獲取元素的所有屬性\n     * @param element - 目標 HTML 元素\n     * @returns 屬性物件\n     */\n    getElementAttributes(element) {\n        const attributes = {};\n        for (let i = 0; i < element.attributes.length; i++) {\n            const attr = element.attributes[i];\n            if (attr) {\n                attributes[attr.name] = attr.value;\n            }\n        }\n        return attributes;\n    },\n    /**\n     * 獲取邊界框資訊\n     * @param rect - DOMRect 物件\n     * @returns 格式化的邊界框資訊\n     */\n    getBoundingRectInfo(rect) {\n        return {\n            x: Math.round(rect.x),\n            y: Math.round(rect.y),\n            width: Math.round(rect.width),\n            height: Math.round(rect.height),\n            top: Math.round(rect.top),\n            right: Math.round(rect.right),\n            bottom: Math.round(rect.bottom),\n            left: Math.round(rect.left)\n        };\n    },\n    /**\n     * 獲取元素樣式資訊\n     * @param computedStyle - 計算後的樣式\n     * @returns 樣式資訊物件\n     */\n    getElementStyles(computedStyle) {\n        return {\n            position: computedStyle.position,\n            display: computedStyle.display,\n            visibility: computedStyle.visibility,\n            zIndex: computedStyle.zIndex\n        };\n    },\n    /**\n     * 獲取視窗資訊\n     * @returns 視窗尺寸和滾動位置\n     */\n    getViewportInfo() {\n        return {\n            width: window.innerWidth,\n            height: window.innerHeight,\n            scrollX: window.pageXOffset || document.documentElement.scrollLeft,\n            scrollY: window.pageYOffset || document.documentElement.scrollTop,\n            userAgent: navigator.userAgent,\n            url: window.location.href,\n            timestamp: new Date().toISOString()\n        };\n    },\n    /**\n     * 計算相對於元素的座標\n     * @param pageX - 頁面 X 座標\n     * @param pageY - 頁面 Y 座標\n     * @param element - 目標元素\n     * @returns 相對座標\n     */\n    getRelativeCoordinates(pageX, pageY, element) {\n        const rect = element.getBoundingClientRect();\n        const scrollX = window.pageXOffset || document.documentElement.scrollLeft;\n        const scrollY = window.pageYOffset || document.documentElement.scrollTop;\n        return {\n            x: Math.round(pageX - rect.left - scrollX),\n            y: Math.round(pageY - rect.top - scrollY)\n        };\n    }\n};\n","import { DOMUtils } from './domUtils';\n/**\n * 點擊追蹤器類別\n */\nexport class ClickTracker {\n    constructor() {\n        this.isTracking = false;\n        this.clickData = [];\n        this.sessionId = this.generateSessionId();\n        this.clickHandler = this.handleClick.bind(this);\n        this.config = {\n            maxDataPoints: 1000,\n            excludeSelectors: [],\n            includeOnlySelectors: []\n        };\n    }\n    /**\n     * 生成會話 ID\n     * @returns 會話 ID 字串\n     */\n    generateSessionId() {\n        return 'session_' + Date.now() + '_' + Math.random().toString(36).substring(2, 9);\n    }\n    /**\n     * 初始化追蹤器\n     * @param options - 配置選項\n     * @returns ClickTracker 實例\n     */\n    init(options = {}) {\n        this.config = { ...this.config, ...options };\n        return this;\n    }\n    /**\n     * 開始追蹤點擊事件\n     * @returns ClickTracker 實例\n     */\n    start() {\n        if (this.isTracking) {\n            console.warn('ClickTracker: 追蹤已經啟動');\n            return this;\n        }\n        this.isTracking = true;\n        document.addEventListener('click', this.clickHandler, true);\n        console.log('ClickTracker: 開始追蹤點擊事件');\n        return this;\n    }\n    /**\n     * 停止追蹤點擊事件\n     * @returns ClickTracker 實例\n     */\n    stop() {\n        if (!this.isTracking) {\n            console.warn('ClickTracker: 追蹤尚未啟動');\n            return this;\n        }\n        this.isTracking = false;\n        document.removeEventListener('click', this.clickHandler, true);\n        console.log('ClickTracker: 停止追蹤點擊事件');\n        return this;\n    }\n    /**\n     * 處理點擊事件\n     * @param event - 滑鼠事件\n     */\n    handleClick(event) {\n        try {\n            const target = event.target;\n            if (!target)\n                return;\n            // 檢查是否應該排除此元素\n            if (this.shouldExcludeElement(target)) {\n                return;\n            }\n            // 收集點擊資料\n            const clickInfo = this.collectClickData(event, target);\n            // 添加到資料陣列\n            this.addClickData(clickInfo);\n            // 觸發自定義事件\n            this.dispatchCustomEvent('heapmap:click', clickInfo);\n        }\n        catch (error) {\n            console.error('ClickTracker: 處理點擊事件時發生錯誤', error);\n        }\n    }\n    /**\n     * 收集點擊資料\n     * @param event - 滑鼠事件\n     * @param target - 目標元素\n     * @returns 點擊資料物件\n     */\n    collectClickData(event, target) {\n        const viewport = DOMUtils.getViewportInfo();\n        const elementInfo = DOMUtils.getElementInfo(target);\n        const relativeCoords = DOMUtils.getRelativeCoordinates(event.pageX, event.pageY, target);\n        return {\n            id: this.generateClickId(),\n            sessionId: this.sessionId,\n            timestamp: new Date().toISOString(),\n            coordinates: {\n                pageX: event.pageX,\n                pageY: event.pageY,\n                clientX: event.clientX,\n                clientY: event.clientY,\n                screenX: event.screenX,\n                screenY: event.screenY,\n                relative: relativeCoords\n            },\n            element: elementInfo,\n            viewport: viewport,\n            eventDetails: {\n                type: event.type,\n                button: event.button,\n                buttons: event.buttons,\n                altKey: event.altKey,\n                ctrlKey: event.ctrlKey,\n                metaKey: event.metaKey,\n                shiftKey: event.shiftKey\n            }\n        };\n    }\n    /**\n     * 生成點擊 ID\n     * @returns 點擊 ID 字串\n     */\n    generateClickId() {\n        return 'click_' + Date.now() + '_' + Math.random().toString(36).substring(2, 9);\n    }\n    /**\n     * 添加點擊資料到陣列\n     * @param clickData - 點擊資料\n     */\n    addClickData(clickData) {\n        this.clickData.push(clickData);\n        // 如果超過最大數量，移除最舊的資料\n        if (this.clickData.length > this.config.maxDataPoints) {\n            this.clickData.shift();\n        }\n    }\n    /**\n     * 檢查是否應該排除該元素\n     * @param element - HTML 元素\n     * @returns 是否應該排除\n     */\n    shouldExcludeElement(element) {\n        // 檢查排除清單\n        if (this.config.excludeSelectors.length > 0) {\n            for (const excludeSelector of this.config.excludeSelectors) {\n                try {\n                    if (element.matches && element.matches(excludeSelector)) {\n                        return true;\n                    }\n                }\n                catch (error) {\n                    console.warn('ClickTracker: 無效的排除選擇器:', excludeSelector);\n                }\n            }\n        }\n        // 檢查包含清單\n        if (this.config.includeOnlySelectors.length > 0) {\n            let shouldInclude = false;\n            for (const includeSelector of this.config.includeOnlySelectors) {\n                try {\n                    if (element.matches && element.matches(includeSelector)) {\n                        shouldInclude = true;\n                        break;\n                    }\n                }\n                catch (error) {\n                    console.warn('ClickTracker: 無效的包含選擇器:', includeSelector);\n                }\n            }\n            return !shouldInclude;\n        }\n        return false;\n    }\n    /**\n     * 觸發自定義事件\n     * @param eventName - 事件名稱\n     * @param detail - 事件詳細資料\n     */\n    dispatchCustomEvent(eventName, detail) {\n        const customEvent = new CustomEvent(eventName, {\n            detail: detail,\n            bubbles: false,\n            cancelable: false\n        });\n        document.dispatchEvent(customEvent);\n    }\n    /**\n     * 獲取收集的資料\n     * @returns 點擊資料陣列的副本\n     */\n    getData() {\n        return [...this.clickData];\n    }\n    /**\n     * 獲取資料統計\n     * @returns 統計資訊物件\n     */\n    getStats() {\n        return {\n            totalClicks: this.clickData.length,\n            sessionId: this.sessionId,\n            isTracking: this.isTracking,\n            firstClick: this.clickData.length > 0 ? this.clickData[0].timestamp : null,\n            lastClick: this.clickData.length > 0 ? this.clickData[this.clickData.length - 1].timestamp : null\n        };\n    }\n    /**\n     * 清除資料\n     * @returns ClickTracker 實例\n     */\n    clearData() {\n        this.clickData = [];\n        console.log('ClickTracker: 資料已清除');\n        return this;\n    }\n    /**\n     * 匯出資料為 JSON\n     * @returns JSON 字串\n     */\n    exportData() {\n        const exportData = {\n            sessionId: this.sessionId,\n            totalClicks: this.clickData.length,\n            exportTime: new Date().toISOString(),\n            data: this.clickData\n        };\n        return JSON.stringify(exportData, null, 2);\n    }\n    /**\n     * 設定配置\n     * @param newConfig - 新的配置物件\n     * @returns ClickTracker 實例\n     */\n    setConfig(newConfig) {\n        this.config = { ...this.config, ...newConfig };\n        return this;\n    }\n    /**\n     * 獲取配置\n     * @returns 配置物件的副本\n     */\n    getConfig() {\n        return { ...this.config };\n    }\n}\n","import { ClickTracker } from './clickTracker';\nimport { DOMUtils } from './domUtils';\n/**\n * HeapMap SDK 主要類別\n */\nclass HeapMapSDK {\n    constructor() {\n        this.version = '1.0.0';\n        this.clickTracker = new ClickTracker();\n    }\n    /**\n     * 初始化 SDK\n     * @param options - 配置選項\n     * @returns HeapMapSDK 實例\n     */\n    init(options = {}) {\n        this.clickTracker.init(options);\n        console.log(`HeapMap SDK v${this.version} 已初始化`);\n        return this;\n    }\n    /**\n     * 開始追蹤\n     * @returns HeapMapSDK 實例\n     */\n    start() {\n        this.clickTracker.start();\n        return this;\n    }\n    /**\n     * 停止追蹤\n     * @returns HeapMapSDK 實例\n     */\n    stop() {\n        this.clickTracker.stop();\n        return this;\n    }\n    /**\n     * 獲取收集的資料\n     * @returns 點擊資料陣列\n     */\n    getData() {\n        return this.clickTracker.getData();\n    }\n    /**\n     * 獲取統計資訊\n     * @returns 統計資訊物件\n     */\n    getStats() {\n        return this.clickTracker.getStats();\n    }\n    /**\n     * 清除資料\n     * @returns HeapMapSDK 實例\n     */\n    clearData() {\n        this.clickTracker.clearData();\n        return this;\n    }\n    /**\n     * 匯出資料\n     * @param format - 匯出格式\n     * @returns 格式化的資料字串\n     * @throws 如果格式不支援會拋出錯誤\n     */\n    exportData(format = 'json') {\n        switch (format.toLowerCase()) {\n            case 'json':\n                return this.clickTracker.exportData();\n            default:\n                throw new Error(`不支援的匯出格式: ${format}`);\n        }\n    }\n    /**\n     * 設定配置\n     * @param config - 配置物件\n     * @returns HeapMapSDK 實例\n     */\n    setConfig(config) {\n        this.clickTracker.setConfig(config);\n        return this;\n    }\n    /**\n     * 獲取配置\n     * @returns 配置物件\n     */\n    getConfig() {\n        return this.clickTracker.getConfig();\n    }\n    /**\n     * 監聽自定義事件\n     * @param eventType - 事件類型\n     * @param callback - 回調函數\n     * @returns HeapMapSDK 實例\n     */\n    on(eventType, callback) {\n        const eventName = `heapmap:${eventType}`;\n        document.addEventListener(eventName, callback);\n        return this;\n    }\n    /**\n     * 移除事件監聽器\n     * @param eventType - 事件類型\n     * @param callback - 回調函數\n     * @returns HeapMapSDK 實例\n     */\n    off(eventType, callback) {\n        const eventName = `heapmap:${eventType}`;\n        document.removeEventListener(eventName, callback);\n        return this;\n    }\n    /**\n     * 獲取 SDK 版本\n     * @returns 版本號字串\n     */\n    getVersion() {\n        return this.version;\n    }\n    /**\n     * 獲取 DOM 工具\n     * @returns DOMUtils 物件\n     */\n    getDOMUtils() {\n        return DOMUtils;\n    }\n}\n// 建立全域實例\nconst HeapMap = new HeapMapSDK();\nif (typeof window !== 'undefined') {\n    window.HeapMap = HeapMap;\n}\n// 支援 CommonJS 和 ES Modules\nexport default HeapMap;\nexport { HeapMapSDK, ClickTracker, DOMUtils };\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","DOMUtils","getElementSelector","element","id","path","current","document","body","selector","tagName","toLowerCase","className","split","filter","cls","join","parent","parentElement","sameTagSiblings","Array","from","children","sibling","length","indexOf","unshift","getElementInfo","_a","_b","rect","getBoundingClientRect","computedStyle","window","getComputedStyle","textContent","trim","substring","innerHTML","attributes","getElementAttributes","boundingRect","getBoundingRectInfo","styles","getElementStyles","i","attr","name","value","x","Math","round","y","width","height","top","right","bottom","left","position","display","visibility","zIndex","getViewportInfo","innerWidth","innerHeight","scrollX","pageXOffset","documentElement","scrollLeft","scrollY","pageYOffset","scrollTop","userAgent","navigator","url","location","href","timestamp","Date","toISOString","getRelativeCoordinates","pageX","pageY","ClickTracker","constructor","isTracking","clickData","sessionId","generateSessionId","clickHandler","handleClick","bind","config","maxDataPoints","excludeSelectors","includeOnlySelectors","now","random","toString","init","options","start","console","warn","addEventListener","log","stop","removeEventListener","event","target","shouldExcludeElement","clickInfo","collectClickData","addClickData","dispatchCustomEvent","error","viewport","elementInfo","relativeCoords","generateClickId","coordinates","clientX","clientY","screenX","screenY","relative","eventDetails","type","button","buttons","altKey","ctrlKey","metaKey","shiftKey","push","shift","excludeSelector","matches","shouldInclude","includeSelector","eventName","detail","customEvent","CustomEvent","bubbles","cancelable","dispatchEvent","getData","getStats","totalClicks","firstClick","lastClick","clearData","exportData","exportTime","data","JSON","stringify","setConfig","newConfig","getConfig","HeapMap","version","clickTracker","format","Error","on","eventType","callback","off","getVersion","getDOMUtils"],"sourceRoot":""}